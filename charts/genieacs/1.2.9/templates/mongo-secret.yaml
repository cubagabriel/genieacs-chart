---
apiVersion: v1
kind: Secret
metadata:
  name: genieacs-secret
  annotations:
    "helm.sh/resource-policy": "keep"
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "0"
type: Opaque
data:
  # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace "genieacs-secret") | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  # set mongodbPassword to existing secret data or generate a random one when not exists
  {{- $mongodbPassword := (get $secretData "mongodb-password") | default (randAlphaNum 32 | b64enc) }}
  mongodb-password: {{ $mongodbPassword | quote }}
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace "genieacs-secret") | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  # set $jwtSecret to existing secret data or generate a random one when not exists
  {{- $jwtSecret := (get $secretData "jwt-secret") | default (randAlphaNum 32 | b64enc) }}
  GENIEACS_UI_JWT_SECRET: {{ $jwtSecret | quote }}
